import json
from nltk.stem.porter import *
from nltk.stem.snowball import SnowballStemmer
import codecs
import string

def main():
	f = open('useful_reviews.json', 'r')
	clean_review = ""
	q = open('features_text/stopwords.txt')
	stopwords = []
	restaurants = open('features_text/restaurant_ids.txt')
	ids = []
	one_stars = codecs.open('one_stars.txt', "w", "utf-8")
	two_stars = codecs.open('two_stars.txt', "w", "utf-8")
	three_stars = codecs.open('three_stars.txt', "w", "utf-8")
	four_stars = codecs.open('four_stars.txt', "w", "utf-8")
	five_stars = codecs.open('five_stars.txt', "w", "utf-8")

	for word in restaurants:
		ids.append(word.rstrip())
	stemmer = SnowballStemmer("english")
	for word in stopwords:
		stopwords.append(word)

	for line in f:
		rec = json.loads(line.strip())
		if (rec["business_id"] in ids):
			r = unicode(rec["text"].lower())
			remove_punctuation_map = dict((ord(char), None) for char in string.punctuation)
			r2 = r.translate(remove_punctuation_map)

			arr = r2.split(" ")
			for i in range(0, len(arr)):
				if arr[i] in stopwords:
					arr[i] = ""
				else:
			 		arr[i] = stemmer.stem(arr[i])
			 		continue
			final = ' '.join(arr)
      print final

			if rec["stars"] == 1:
				one_stars.write(final + "\n")
			elif rec["stars"] == 2:
				two_stars.write(final + "\n")
			elif rec["stars"] == 3:
				three_stars.write(final + "\n")			
			elif rec["stars"] == 4:
				four_stars.write(final + "\n")
			elif rec["stars"] == 5:
				five_stars.write(final + "\n")

if __name__ == "__main__":
  main()


